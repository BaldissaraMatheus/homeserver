---
- name: Install iptables
  package:
    name: iptables
    state: present

- name: Read rules file
  shell: cat '{{ iptables_rules_path }}' || echo '{{ iptables_rules_default_msg }}'
  register: filecontent
  changed_when: false

- name: Remove autogenerated rules
  file:
    path: '{{ iptables_rules_path }}'
    state: absent
  # TODO not triggering when condition is true
  # when: filecontent.stdout_lines[0] == 'iptables_rules_default_msg|string'

- name: Add default rule
  blockinfile:
    create: yes
    mode: 0644
    block: |
      *filter
      :INPUT DROP [0:0]
      :FORWARD DROP [0:0]
      :OUTPUT ACCEPT [0:0]
    path: '{{ iptables_rules_path }}'

- name: Allow established and related connections
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: ESTABLISHED,RELATED
    comment: Ansible managed
    jump: ACCEPT

- name: Log port scans
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: NEW
    comment: Ansible managed
    jump: LOG
  when: enable_crowdsec | default(False)

- name: Allow SSH
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ security_ssh_port }}"
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible managed

- name: Allow HTTP and HTTPS
  iptables:
    chain: INPUT
    protocol: tcp
    destination_ports:
      - "80"
      - "443"
    jump: ACCEPT
    comment: Ansible managed

- name: Allow Samba (UDP ports)
  iptables:
    chain: INPUT
    source: 192.168.0.0/16
    protocol: udp
    destination_ports:
      - "137"
      - "138"
    jump: ACCEPT
    comment: Ansible managed

- name: Allow Samba (TCP ports)
  iptables:
    chain: INPUT
    source: 192.168.0.0/16
    protocol: udp
    destination_ports:
      - "139"
      - "445"
    jump: ACCEPT
    comment: Ansible managed

- name: Allow Deluge from docker network
  iptables:
    chain: INPUT
    # Docker "services" network subnet
    source: 127.18.0.0/16
    protocol: tcp
    destination_ports:
      - "8112"
    jump: ACCEPT
    comment: Ansible managed

- name: (IPv4) Set the policy for the INPUT chain to DROP
  iptables:
    chain: INPUT
    policy: DROP

- name: (IPv6) Set the policy for the INPUT chain to DROP
  iptables:
    ip_version: ipv6
    chain: INPUT
    policy: DROP

- name: Save new rules
  shell:
    cmd: iptables -t filter -S INPUT | grep "Ansible managed"
  changed_when: no
  register: iptables_rules

- name: Add COMMIT
  lineinfile:
    line: COMMIT
    state: present
    path: '{{ iptables_rules_path }}'

- name: Save the new rules
  blockinfile:
    block: "{{ iptables_rules.stdout }}"
    state: present
    insertbefore: COMMIT
    path: '{{ iptables_rules_path }}'
    marker_begin: "CUSTOM RULES BEGIN"
    marker_end: "CUSTOM RULES END"
  notify:
    - restart relevant services

- name: Make sure the iptables systemd service is enabled and started
  service:
    name: iptables
    enabled: yes
    state: started